{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","components/Order.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","_this","current","value","props","history","push","concat","react_default","a","createElement","Fragment","className","onSubmit","this","ref","type","required","placeholder","defaultValue","Component","Header","tagline","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","fish","name","price","parseFloat","status","description","image","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","Object","objectSpread","defineProperty","updateFish","index","_this2","onChange","desc","onClick","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","_callee","authData","store","regenerator_default","wrap","_context","prev","next","fetch","storeId","context","assertThisInitialized","sent","console","log","post","data","user","setState","stop","provider","authProvider","auth","signInWithPopup","then","logout","_callee2","_context2","signOut","onAuthStateChanged","_this3","components_AddFishForm","keys","fishes","map","key","components_EditFishForm","loadSampleFishes","components_Login","Order","renderOrder","count","order","transitionOptions","classNames","timeout","enter","exit","isAvailable","react_transition_group","component","removeFromOrder","orderIds","total","reduce","prevTotal","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","handleClick","addToOrder","_this$props$details","details","src","alt","disabled","App","Date","now","sampleFishes","localStorageRef","localStorage","getItem","match","params","JSON","parse","syncState","removeBinding","setItem","stringify","components_Header","Fish_Fish","components_Order","components_Inventory","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","components_Router","document","querySelector"],"mappings":"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","file":"static/js/main.3042039f.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"Cool\",\n    \"Fresh\",\n    \"Clean\",\n    \"Raw\",\n    \"Frosty\",\n    \"Frigid\",\n    \"Chilly\",\n    \"Chilled\",\n  ];\n\n  const nouns = [\n    \"Shop\",\n    \"Store\",\n    \"Market\",\n    \"Marketplace\",\n    \"Center\",\n    \"Location\",\n    \"Spot\",\n  ];\n\n  return `The-${rando(adjectives)}-Seafood-${rando(nouns)}`;\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getFunName } from '../helpers';\r\n\r\nclass StorePicker extends React.Component { \r\n    static propTypes = {\r\n        history: PropTypes.object,\r\n    }\r\n\r\n   myInput = React.createRef(); \r\n    goToStore = event => {\r\n        event.preventDefault();\r\n        const storeName = this.myInput.current.value;\r\n        this.props.history.push(`/store/${storeName}`)\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <React.Fragment> \r\n            <form className=\"store-selector\" onSubmit={this.goToStore}>\r\n                <h2>Please Enter A Store</h2>\r\n                <input \r\n                    ref={this.myInput}\r\n                    type=\"text\" \r\n                    required placeholder=\"Store Name\" \r\n                    defaultValue={getFunName()} \r\n                    />\r\n                <button type=\"submit\">Visit Store</button>\r\n            </form>\r\n            </React.Fragment>\r\n        );\r\n        \r\n    }\r\n}\r\n\r\nexport default StorePicker;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Header = props => (\r\n            <header className='top'>\r\n                <h1>\r\n                Catch \r\n                <span className=\"ofThe\">\r\n                    <span className=\"of\">Of</span>\r\n                    <span className=\"the\">The</span>\r\n                </span>\r\n                Day\r\n                </h1>\r\n            <h3 className=\"tagline\">\r\n                <span>{props.tagline}</span>\r\n            </h3>\r\n            </header>\r\n);\r\n    Header.propTypes = {\r\n        tagline: PropTypes.string.isRequired\r\n};\r\n\r\n\r\nexport default Header;","import React from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nclass AddFishForm extends React.Component {\r\n    nameRef = React.createRef();\r\n    priceRef = React.createRef();\r\n    statusRef = React.createRef();\r\n    descRef = React.createRef();\r\n    imageRef = React.createRef();\r\n\r\n    static propTypes = {\r\n        addFish: propTypes.func,\r\n    }\r\n\r\n    createFish = event => {\r\n        event.preventDefault();\r\n        const fish = {\r\n            name: this.nameRef.current.value,\r\n            price: parseFloat(this.priceRef.current.value),\r\n            status: this.statusRef.current.value,\r\n            description: this.descRef.current.value,\r\n            image: this.imageRef.current.value\r\n        }\r\n        this.props.addFish(fish)\r\n        //This refreshes the form\r\n        event.currentTarget.reset();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n           <div className=\"inventory\">\r\n               <form className=\"fish-edit\" onSubmit={this.createFish}>\r\n                   <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder =\"Name\"></input>\r\n                   <input name=\"price\" ref={this.priceRef} type=\"text\" placeholder =\"Price\"></input>\r\n                   <select name=\"status\" ref={this.statusRef}>\r\n                       <option value=\"available\">Fresh</option>\r\n                       <option value=\"unavailable\">Sold Out</option>\r\n                   </select>\r\n                   <textarea name=\"desc\" ref={this.descRef} placeholder =\"Description\"></textarea>\r\n                   <input name=\"image\" ref={this.imageRef} type=\"text\" placeholder =\"Image\"></input>\r\n                   <button type=\"submit\">+ Add Fish</button>\r\n               </form>\r\n\r\n           </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddFishForm;","import React, { Component } from 'react';\r\nimport { formatPrice } from '../helpers';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass EditFishForm extends Component {\r\n    static propTypes = {\r\n        fish: PropTypes.shape({\r\n            image: PropTypes.string,\r\n            name: PropTypes.string,\r\n            desc: PropTypes.string,\r\n            status: PropTypes.string,\r\n            price: PropTypes.number\r\n        }), \r\n        index: PropTypes.string,\r\n        updateFish: PropTypes.func,\r\n        deleteFish: PropTypes.func,\r\n    }\r\n    handleChange = event => {\r\n        const updatedFish = { \r\n            ...this.props.fish,\r\n            [event.currentTarget.name]: event.currentTarget.value\r\n        };\r\n        this.props.updateFish(this.props.index, updatedFish)\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"fish-edit\">\r\n                <input type=\"text\" name=\"name\" onChange={this.handleChange} value={this.props.fish.name} />\r\n                <input type=\"text\" name=\"price\" onChange={this.handleChange} value={formatPrice(this.props.fish.price)} />\r\n                <select type=\"text\" name=\"status\" onChange={this.handleChange} value={this.props.fish.status}>\r\n                    <option>Fresh</option>\r\n                    <option>Sold Out!</option>\r\n                </select>\r\n                <textarea name=\"desc\" onChange={this.handleChange} value={this.props.fish.desc} />\r\n                <input type=\"text\" name=\"image\" onChange={this.handleChange} value={this.props.fish.image} />\r\n                <button onClick={() => this.props.deleteFish(this.props.index)}>Remove Fish</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditFishForm","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Login = props => (\r\n  <nav className=\"login\">\r\n    <h2>Inventory Login</h2>\r\n    <p>Sign in to manage your store's inventory.</p>\r\n    <button className=\"github\" onClick={() => props.authenticate(\"Github\")}>\r\n      Log In With GitHub\r\n    </button>\r\n    <button className=\"facebook\" onClick={() => props.authenticate(\"Facebook\")}>\r\n      Log In Anonymously\r\n    </button>\r\n  </nav>\r\n);\r\nLogin.propTypes = {\r\n  authenticate: PropTypes.func.isRequired\r\n};\r\nexport default Login;","import Rebase from 're-base';\r\nimport firebase from 'firebase';\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyA4S-nM4__gMXYXs3eW3AsJTsQT_WLZHKo\",\r\n    authDomain: \"react-store-andrew.firebaseapp.com\",\r\n    databaseURL: \"https://react-store-andrew.firebaseio.com\",\r\n})\r\n\r\nconst base = Rebase.createClass(firebaseApp.database());\r\n\r\nexport { firebaseApp };\r\n\r\nexport default base","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport firebase from \"firebase\";\r\nimport AddFishForm from \"./AddFishForm\";\r\nimport EditFishForm from \"./EditFishForm\";\r\nimport Login from \"./Login\";\r\nimport base, { firebaseApp } from \"../base\";\r\n\r\nclass Inventory extends React.Component {\r\n  static propTypes = {\r\n    fishes: PropTypes.object,\r\n    updateFish: PropTypes.func,\r\n    deleteFish: PropTypes.func,\r\n    loadSampleFishes: PropTypes.func,\r\n    addFish: PropTypes.func\r\n  };\r\n\r\n  state = {\r\n    uid: null,\r\n    owner: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    firebase.auth().onAuthStateChanged(user => {\r\n      if (user) {\r\n        this.authHandler({ user });\r\n      }\r\n    });\r\n  }\r\n\r\n  authHandler = async authData => {\r\n    // 1 .Look up the current store in the firebase database\r\n    const store = await base.fetch(this.props.storeId, { context: this });\r\n    console.log(store);\r\n    // 2. Claim it if there is no owner\r\n    if (!store.owner) {\r\n      // save it as our own\r\n      await base.post(`${this.props.storeId}/owner`, {\r\n        data: authData.user.uid\r\n      });\r\n    }\r\n    // 3. Set the state of the inventory component to reflect the current user\r\n    this.setState({\r\n      uid: authData.user.uid,\r\n      owner: store.owner || authData.user.uid\r\n    });\r\n  };\r\n\r\n  authenticate = provider => {\r\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\r\n    firebaseApp\r\n      .auth()\r\n      .signInWithPopup(authProvider)\r\n      .then(this.authHandler);\r\n  };\r\n\r\n  logout = async () => {\r\n    console.log(\"Logging out!\");\r\n    await firebase.auth().signOut();\r\n    this.setState({ uid: null });\r\n  };\r\n\r\n  render() {\r\n    const logout = <button className=\"logout\" onClick={this.logout}>Log Out!</button>;\r\n\r\n    // 1. Check if they are logged in\r\n    if (!this.state.uid) {\r\n      return <Login authenticate={this.authenticate} />;\r\n    }\r\n\r\n    // 2. check if they are not the owner of the store\r\n    if (this.state.uid !== this.state.owner) {\r\n      return (\r\n        <div>\r\n          <p>Sorry you are not the owner!</p>\r\n          {logout}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    // 3. They must be the owner, just render the inventory\r\n    return (\r\n      <div className=\"inventory\">\r\n        {logout}\r\n        <h2>Inventory</h2>\r\n        <AddFishForm addFish={this.props.addFish} />\r\n        {Object.keys(this.props.fishes).map(key => (\r\n          <EditFishForm\r\n            key={key}\r\n            index={key}\r\n            fish={this.props.fishes[key]}\r\n            updateFish={this.props.updateFish}\r\n            deleteFish={this.props.deleteFish}\r\n          />\r\n        ))}\r\n        <button onClick={this.props.loadSampleFishes}>\r\n          Load Sample Fishes\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Inventory;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { formatPrice } from '../helpers';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nclass Order extends React.Component {\r\n    static propTypes = {\r\n        fishes: PropTypes.shape({\r\n            image: PropTypes.string,\r\n            name: PropTypes.string,\r\n            desc: PropTypes.string,\r\n            status: PropTypes.string,\r\n            price: PropTypes.number\r\n        }),\r\n        order: PropTypes.object,\r\n        removeFromOrder: PropTypes.func,\r\n    }\r\n    renderOrder = key => {\r\n        const fish = this.props.fishes[key];\r\n        const count = this.props.order[key];\r\n        const transitionOptions = {\r\n            classNames: 'order',\r\n            key,\r\n            timeout: { enter: 500, exit: 500 }\r\n        }\r\n        const isAvailable = fish && fish.status === 'available';\r\n        if (!fish) return null;\r\n\r\n        if(!isAvailable) {\r\n           return (\r\n            <CSSTransition {...transitionOptions}>\r\n                <li key={key}>\r\n                    Sorry, {fish ? fish.name : 'fish'} is no longer available\r\n                </li> \r\n            </CSSTransition>\r\n           )\r\n        } else {\r\n\r\n        return (\r\n        <CSSTransition {...transitionOptions}>\r\n            <li key={key}>\r\n              <span>\r\n                <TransitionGroup className=\"count\" component=\"span\">\r\n                    <CSSTransition classNames=\"count\" key={count} timeout={{ enter: 500, exit: 500 }}>\r\n                    <span>{count}</span> \r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n                {count>1? \"lbs\": \"lb\"} {fish.name} {formatPrice(count * fish.price)}\r\n              </span>\r\n                <button onClick={() => this.props.removeFromOrder(key)}>&times;</button>\r\n            </li>\r\n        </CSSTransition>\r\n        )\r\n        }\r\n    }\r\n    render() {\r\n        const orderIds = Object.keys(this.props.order);\r\n        const total = orderIds.reduce((prevTotal, key) => {\r\n            const fish = this.props.fishes[key];\r\n            const count = this.props.order[key];\r\n            const isAvailable = fish && fish.status === 'available';\r\n            if (isAvailable) {\r\n                return prevTotal + (count * fish.price);\r\n            }\r\n            return prevTotal;\r\n            }, 0);\r\n        return(\r\n            <div className=\"order-wrap\">\r\n                <h2>Order</h2>\r\n                <TransitionGroup component=\"ul\" className=\"order\">\r\n                    {orderIds.map(this.renderOrder)}\r\n                </TransitionGroup>\r\n                <div className=\"total\">\r\n                    Total: <strong>{formatPrice(total)}</strong>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Order;","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { formatPrice } from '../helpers';\r\n\r\nexport default class Fish extends Component {\r\n    static propTypes = {\r\n        details: PropTypes.shape({\r\n            image: PropTypes.string,\r\n            name: PropTypes.string,\r\n            desc: PropTypes.string,\r\n            status: PropTypes.string,\r\n            price: PropTypes.number\r\n        }),\r\n        addToOrder: PropTypes.func,\r\n    }\r\n    handleClick = () => {\r\n        this.props.addToOrder(this.props.index);\r\n    }\r\n    render() {\r\n        const {image, name, price, desc, status } = this.props.details;\r\n        const isAvailable = status === 'available';\r\n        return (\r\n            <li className=\"menu-fish\">\r\n                <img src={image} alt={name} />\r\n                <h3 className=\"fish-name\">{name}\r\n                <span className=\"price\">{formatPrice(price)}</span>\r\n                </h3>\r\n                <p>{desc}</p>\r\n                <button onClick={this.handleClick} disabled={!isAvailable}>{isAvailable ? \"Add to Cart\": \"Sold Out\"}</button>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Header from './Header';\r\nimport Inventory from './Inventory';\r\nimport Order from './Order';\r\nimport sampleFishes from '../sample-fishes';\r\nimport Fish from './Fish';\r\nimport base from \"../base\";\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        fishes: {},\r\n        order: {},\r\n    }\r\n\r\n    static propTypes = {\r\n        match: PropTypes.object,\r\n    }\r\n\r\n    componentDidMount() {\r\n        //This reinstates the local storage\r\n        const localStorageRef = localStorage.getItem(this.props.match.params.storeId)\r\n        if (localStorageRef) {\r\n            this.setState({\r\n                order: JSON.parse(localStorageRef)\r\n            })\r\n        }\r\n        this.ref = base.syncState(`${this.props.match.params.storeId}/fishes`, {\r\n            context: this,\r\n            state: 'fishes'\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        base.removeBinding(this.ref);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order))\r\n    }\r\n    \r\n    addFish = fish => {\r\n        console.log('Fish was added')\r\n        const fishes = { ...this.state.fishes };\r\n        fishes[`fish${Date.now()}`] = fish;\r\n        // This updates the fishes objects within the state object\r\n        this.setState({ fishes })\r\n        console.log(this.state.fishes)\r\n\r\n    }\r\n    updateFish = (key, updatedFish) => {\r\n        const fishes = {...this.state.fishes};\r\n        fishes[key] = updatedFish;\r\n        this.setState({ fishes })\r\n    }\r\n    deleteFish = (key) => {\r\n        const fishes = {...this.state.fishes};\r\n        fishes[key] = null;\r\n        this.setState({ fishes })\r\n    }\r\n    removeFromOrder = (key) => {\r\n        const order = {...this.state.order};\r\n        delete order[key]\r\n        this.setState({ order});\r\n        console.log(\"This was removed to your order\")\r\n    }\r\n    loadSampleFishes = () => {\r\n        console.log(\"Samples loaded\");\r\n        this.setState({ fishes: sampleFishes})\r\n    }\r\n    addToOrder = key => {\r\n        // Take a copy of state\r\n        const order = {...this.state.order};\r\n        // Add or update to the order\r\n        order[key] = order[key] + 1 || 1;\r\n        // call set State to update out state objects\r\n        this.setState({ order});\r\n        console.log(\"This was added to your order\")\r\n    }\r\n    render() {\r\n        return(\r\n            <div className=\"catch-of-the-day\">\r\n                <div className=\"menu\">\r\n                    <Header tagline=\"Fresh Seafood Market\"/>\r\n                    <ul className=\"fishes\">\r\n                    {Object.keys(this.state.fishes).map(key => <Fish key={key} details={this.state.fishes[key]} addToOrder={this.addToOrder} index={key}/>)}\r\n                    </ul>\r\n                </div>\r\n                <Order \r\n                    fishes={this.state.fishes}\r\n                    removeFromOrder={this.removeFromOrder}\r\n                    order={this.state.order} />\r\n                <Inventory \r\n                    storeId={this.props.match.params.storeId}\r\n                    deleteFish={this.deleteFish}\r\n                    updateFish={this.updateFish}\r\n                    fishes={this.state.fishes}\r\n                    addFish={this.addFish} \r\n                    loadSampleFishes={this.loadSampleFishes}\r\n                    />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n \r\nexport default App;","import React from 'react';\r\n\r\nconst NotFound = () => (\r\n    <div>\r\n        <h2>Not Found</h2>\r\n    </div>\r\n)\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport StorePicker from './StorePicker';\r\nimport App from './App';\r\nimport NotFound from './NotFound';\r\n\r\nconst Router = () => (\r\n    <BrowserRouter>\r\n        <Switch>\r\n            <Route exact path=\"/\" component={StorePicker} />\r\n            <Route path=\"/store/:storeId\" component={App} />\r\n            <Route component={NotFound} />\r\n        </Switch>\r\n    </BrowserRouter>\r\n)\r\n\r\nexport default Router","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport Router from './components/Router';\r\nimport './css/style.css';\r\n\r\n\r\n\r\nrender(<Router />, document.querySelector('#main'));"],"sourceRoot":""}